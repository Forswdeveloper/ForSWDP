Throwable 클래스와 예외처리의 책임 전가.

예외 처리의 최상위 클래스
java.lang.Throwable

이 클래스에는 예외의 정보를 알 수 있는 메소드가 정의되어 있다.

public String getMessage()  -> 예외의 원인을 담고 있는 문자열을 반환.
public void printStackTrace() ->  예외가 발생한 위치와 호출된 메소드의 정보를 출력 (getMessage()도 같이 출력함)

프로그래머가 예외 처리를 하지 않으면 그 책임이 넘어가는데 그 끝은 main이다.


public class ExceptionMessage {
	public static void md1(int n)
	{
		md2(n,0);
	}
	public static void md2(int n1,int n2)
	{
		int r = n1 / n2;
	}
	public static void main(String[] args)
	{
		try {
			md1(3);
		}
		catch(Throwable e)
		{
			e.printStackTrace();
		}
	}
}

실제 넘어오는 예외는 Throwable이 아니다. 그러나 모든 예외 클래스는 Throwable을 상속하므로 위와 같이 처리할 수 있다.(좋지 않음)


예외클래스의 구분

예외클래스의 최상위 클래스 Throwable 클래스는 세 부류로 나뉘는데
1. Error 클래스를 상속하는 예외 클래스    
2. Exception 클래스를 상속하는 예외 클래스
3. RuntimeExceeption 클래스를 상속하는 예외 클래스  -> Exception 클래스를 상속 한다.

Error 클래스를 상속하는 예외는 처리의 대상이 아니다. 바꾸어 말하면 처리할 수 있는 예외가 아니다. 그냥 냅둬야함.
RuntimeException 클래스를 상속하는 예외는 앞서 보였던 모든 예외 클래스가 이 예외에 해당한다.

ArithmeticException
ClassCastException
IndexOutofBoundsException
NegativeArraySizeException
NullPointerException
ArrayStoreException

