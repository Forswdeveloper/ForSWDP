람다식의 이해가 선행.


메소드 참조의 4가지 유형과 메소드 참조의 장점

static 메소드의 참조

참조변수를 통한 인스턴스 메소드 참조

클래스 이름을 통한 인스턴스 메소드 참조

생성자 참조

기본적으로 람다식보다 조금 더 코드를 단순하게 할 수 있다는 장점이 있다.
일부 람다식을 메소드 참조로 대신하게 할 수 있다.


static  메소드의 참조 : 람다식 기반 예제


Collections 클래스의 reverse 메소드 기반 예제                                            Consumer<T> void accept(T t)
public static void reverse(List<?> list) // 저장 순서를 뒤집는다.

List<Integer> ls = Arrays.asList(1,3,5,7,9);
ls = new ArrayList<>(ls); 

Consumer<List<Integer>> c = 1 -> Collections.reverse(1); // reverse 메소드 호출 중심의 람다식
c.accept(ls); // 순서 뒤집기 진행
System.out.println(ls); // 출력




