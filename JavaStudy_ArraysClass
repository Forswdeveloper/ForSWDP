java.util.Arrays 클래스는 배열 조작에 도움을 주는 메소드들로 채워져 있다.
배열의 복사, 비교, 졍렬 및 탐색 비교적 쉽게 작성.

배열의 복사

public static int[] copyOf(int[] original, int newLength) ->  original에 전달된 배열을 첫 번째 요소부터 newLength의 길이만큼 복사

public static int[] copyOfRange(int[] original, int from, int to) -> original에 전달된 배열을 인덱스 from부터 to 이전 요소까지 복사

public static void arraycopy(Object src, int srcPos, Object dest, int destPos, int length)
-> 배열 src의 srcPos에서 배열 dest의 destPos로 length 길이만큼 복사.

double[] org = {1.1,2.2,3.3,4.4,5.5};
		double[] cpy = new double[3];
		
		System.arraycopy(org, 1, cpy, 0, 3);
		
		for(double d : cpy)
			System.out.println(d + "\t");
		
		System.out.println();
    
 
 
 배열의 비교
 
 public static boolean equals(int[] a, int[] a2) -> 매개변수 a와 a2로 전달된 배열의 내용을 배교하여 true 또는 false 반환
 
 import java.util.Arrays;
    int[] ar1 = {1,2,3,4,5};
		int[] ar2 = Arrays.copyOf(ar1, ar1.length);
		
		System.out.println(Arrays.equals(ar1,ar2));
    
    equals는 Objects에 속한게아닌 Arrays에 속한것이다.
 
 Object형 배열에 대해서도 오버로딩이 되어있긴하다.     public static boolean equals(Object[] a, Object[] a2)
 
 이 메소드는 참조 값이 아닌 참조하는 인스턴스의 내용을 비교한다.
 
 equals는 목적에 맞게 오버라이딩 해야 한다. 아니면 내용 값이 아닌 참조 값을 비교하게 된다.
 
 
 배열의 정렬
 
 public static void sort(int[] a) -> 매개변수 a로 전달된 배열을 오름차순으로 정렬
 
 
 
